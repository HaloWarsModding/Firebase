<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vc="clr-namespace:HWM.Tools.Firebase.WPF.Xaml">

    <!-- Custom Colors -->
    <Color x:Key="Colors.ForerunnerCyan" R="#AA" G="#FF" B="#FF" A="#FF"/>
    <SolidColorBrush x:Key="Brushes.ForerunnerCyan" Color="{DynamicResource Colors.ForerunnerCyan}"/>

    <!-- Big Button -->
    <ImageBrush Stretch="Fill" x:Key="MainWindow.BigButton"           ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/BigButton.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.BigButton.MouseOver" ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/BigButton_MouseOver.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.BigButton.Pressed"   ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/BigButton_Pressed.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.BigButton.Disabled"  ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/BigButton_Disabled.png"/>

    <!-- Exit Button -->
    <ImageBrush Stretch="Fill" x:Key="MainWindow.ExitButton"           ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/ExitButton.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.ExitButton.MouseOver" ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/ExitButton_MouseOver.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.ExitButton.Pressed"   ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/ExitButton_Pressed.png"/>

    <!-- Minimize Button -->
    <ImageBrush Stretch="Fill" x:Key="MainWindow.MinimizeButton"           ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/MinimizeButton.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.MinimizeButton.MouseOver" ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/MinimizeButton_MouseOver.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.MinimizeButton.Pressed"   ImageSource="pack://application:,,,/Resources/Layout/MainWindow/Buttons/MinimizeButton_Pressed.png"/>

    <!-- Layout Stuff -->
    <ImageBrush Stretch="Fill" x:Key="MainWindow.Background"                ImageSource="pack://application:,,,/Resources/Layout/MainWindow/StillBackground.jpg"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.OpacityMask"               ImageSource="pack://application:,,,/Resources/Layout/MainWindow/OpacityMask.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.ModContent.ListBox"        ImageSource="pack://application:,,,/Resources/Layout/MainWindow/ModContent/ListBox.png"/>
    <ImageBrush Stretch="Fill" x:Key="MainWindow.ModContent.DescriptionBox" ImageSource="pack://application:,,,/Resources/Layout/MainWindow/ModContent/DescriptionBox.png"/>

    <!-- Background Video -->
    <VisualBrush x:Key="Background.Animated" Stretch="Fill">
        <VisualBrush.Visual>
            <MediaElement Stretch="UniformToFill" LoadedBehavior="Manual"/>
        </VisualBrush.Visual>
    </VisualBrush>
    
    <!-- Value Converters -->
    <vc:BitmapAssetValueConverter x:Key="variableBannerArt" />

    <!-- Top Corner Buttons -->
    <Style x:Key="SmallButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness"            Value="0"      />
        <Setter Property="VerticalAlignment"          Value="Top"    />
        <Setter Property="Width"                      Value="25"     />
        <Setter Property="Height"                     Value="24"     />
        <Setter Property="HorizontalContentAlignment" Value="Left"   />
        <Setter Property="Margin"                     Value="2,0,2,0"/>
    </Style>

    <Style x:Key="MainWindow.MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource SmallButtonStyle}">
        <Setter Property="Background" Value="{StaticResource MainWindow.MinimizeButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainWindow.MinimizeButton.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainWindow.MinimizeButton.Pressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainWindow.ExitButtonStyle" TargetType="Button" BasedOn="{StaticResource SmallButtonStyle}">
        <Setter Property="Background" Value="{StaticResource MainWindow.ExitButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainWindow.ExitButton.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource MainWindow.ExitButton.Pressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Main Big Buttons -->
    <Style x:Key="BigButtonStyle" TargetType="Button">
        <Setter Property="Width"                      Value="112"/>
        <Setter Property="Height"                     Value="44"/>
        <Setter Property="BorderThickness"            Value="0"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground"                 Value="{DynamicResource Brushes.ForerunnerCyan}"/>
        <Setter Property="Background"                 Value="{DynamicResource MainWindow.BigButton}"/>
        <Setter Property="Margin"                     Value="37,0,37,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Brushes.ForerunnerCyan}"/>
                            <Setter Property="Background" Value="{DynamicResource MainWindow.BigButton.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainWindow.BigButton.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Setter Property="Background" Value="{DynamicResource MainWindow.BigButton.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Progress Bar -->
    <Style x:Key="RoundedEdgeProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background"      Value="DimGray"/>
        <Setter Property="Visibility"      Value="Hidden"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="{DynamicResource Colors.ForerunnerCyan}" Offset="0.825"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="5"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5" RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>